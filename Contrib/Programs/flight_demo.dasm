jsr map_hardware
jsr init_interrupt
jsr init_dev_crash
jsr start_flight

set pc, halt

; Globals
:dev_crash          dat 0x0000
:imsg_stagespent    dat 0x0001

; Iterate through connected hardware devices
:map_hardware
    hwn i
    :map_hardware_loop
        sub i, 1
        hwq i

        ife b, 0xcae1
            ife a, 0x0001
                set [dev_crash], i

        ifn i, 0
            set pc, map_hardware_loop
        set pc, pop

; Initialize interrupt handler
:init_interrupt
    ias handle_interrupt
    set pc, pop

; Initialize CRASH device
:init_dev_crash
    ; Enable interrupt for spent stages
    set a, 0x8001
    set b, [imsg_stagespent]
    hwi [dev_crash]

    set pc, pop

; Start flight sequence
:start_flight
    ; Set CRASH to Exclusive mode
    set push, 0x0001
    jsr dev_crash_set_mode

    ; Engage SAS
    jsr dev_crash_sas

    ; Set throttle to 100%
    set push, 0xFFFF
    jsr dev_crash_throttle

    ; Engage staging
    jsr dev_crash_staging

    set pc, pop

; Deploy equipment
:start_deploy
    ; Engage ActionGroup 1
    set push, 1
    jsr dev_crash_set_actiongroup

    ; Engage ActionGroup 2
    set push, 2
    jsr dev_crash_set_actiongroup

    set pc, pop

; Set the mode of the CRASH device
; Parameters:
;   Mode
:dev_crash_set_mode
    set z, pop
    set b, pop
    set push, z

    set a, 0x4001
    hwi [dev_crash]

    set pc, pop

; Engage ActionGroup with CRASH device
; Parameters
;   ActionGroup
:dev_crash_set_actiongroup
    set z, pop
    set b, pop  ; ActionGroup
    set push, z

    set a, 0x4005   ; SetActionGroup
    hwi [dev_crash]

    set pc, pop

; Engage SAS
:dev_crash_sas
    set push, 0x8005
    jsr dev_crash_set_actiongroup

    set pc, pop

; Engage staging
:dev_crash_staging
    set push, 0x8001
    jsr dev_crash_set_actiongroup

    set pc, pop

; Get Stage
; Returns:
;   Stage
:dev_crash_get_stage
    set a, 0x0001
    hwi [dev_crash]

    set z, pop
    set push, b
    set push, z

    set pc, pop

; Set Throttle
; Parameters:
;   Value
:dev_crash_throttle
    set z, pop
    set b, pop
    set push, z

    set a, 0x4004
    hwi [dev_crash]

    set pc, pop

; Primary interrupt handler
:handle_interrupt
    ife a, [imsg_stagespent]
        jsr handle_interrupt_stagespent

    rfi 0

; Handle StageSpent interrupt
:handle_interrupt_stagespent
    jsr dev_crash_get_stage
    set a, pop

    ; If current stage is 0
    ife a, 0
        jsr start_deploy

    ; If current stage is not 0
    ifn a, 0
        jsr dev_crash_staging

    set pc, pop

; Suspend processor
:halt
    add pc, -1
